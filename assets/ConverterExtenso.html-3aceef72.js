import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as e,c as o,a as n,b as p,d as c,e as i}from"./app-46f5ff54.js";const l={},u=i(`<h1 id="exercicio-converter-para-extenso" tabindex="-1"><a class="header-anchor" href="#exercicio-converter-para-extenso" aria-hidden="true">#</a> Exercício: Converter para Extenso</h1><p>Analisando o processo de conversão de um numero inteiro para o seu correspondente texto por extenso percebemos que existe muita coisa em comum quando são adicionados novos dígitos.</p><ol><li><p>Crie uma família de classes (utilize herança) para transformar um número inteiro em seu correspondente texto por extenso sendo possível executar o código abaixo.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ConverterExtenso</span> ce <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
ce <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConverterExtenso4Digitos</span><span class="token punctuation">(</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ce<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// -&gt; Nove Mil Novecentos e Noventa e Nove</span>
ce <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConverterExtenso3Digitos</span><span class="token punctuation">(</span><span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ce<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// -&gt; Novecentos e Noventa e Nove</span>
ce <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConverterExtenso2Digitos</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ce<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// -&gt; Noventa e Nove</span>
ce <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConverterExtenso1Digito</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ce<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// -&gt; Nove</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Segue exemplo:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">class</span> <span class="token class-name">ConverterExtenso1Digito</span> <span class="token punctuation">{</span>
   
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> porExtenso <span class="token operator">=</span>  <span class="token punctuation">{</span> <span class="token string">&quot;Zero&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Um&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Dois&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Três&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Quatro&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cinco&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Seis&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Sete&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Oito&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Nove&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Dez&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">//...</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> porExtenso<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>numero<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="link" tabindex="-1"><a class="header-anchor" href="#link" aria-hidden="true">#</a> Link</h2>`,4),r={href:"https://classroom.github.com/a/rZNkgSnQ",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const s=t("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",r,[p("Entrega"),c(s)])])])}const g=a(l,[["render",k],["__file","ConverterExtenso.html.vue"]]);export{g as default};
