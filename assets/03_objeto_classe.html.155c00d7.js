import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c,a as n,d as a,w as e,e as t,r as l,b as o}from"./app.5cac9c68.js";const u={},r=t(`<h1 id="objeto" tabindex="-1"><a class="header-anchor" href="#objeto" aria-hidden="true">#</a> Objeto</h1><p><sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><ul><li>Um objeto \xE9 cada uma das entidades identific\xE1veis num dado dom\xEDnio de aplica\xE7\xE3o</li><li>Em um sistema Banc\xE1rio ter\xEDamos objetos do tipo: Cliente, Conta, Conta Corrente, Dependente, etc.</li><li>Um objeto tamb\xE9m pode ser visto como um agregado de outros objetos (suas partes)</li></ul><figure><img src="https://www.plantuml.com/plantuml/svg/NOz12W8n34NtEKNetYj8rHE8It6HQOCjT5AdxMmKxsvmK4gp-Z-F5uYjZKfRvmJsdmgxHd9FZERmq1tDB2sR5w1E1o-Ko21Lh2CvhwhbBrj6TihFA64JtGYF985ZsTG9Akwk8NhFSjlhfQMl3bnV9tY3PV7w0E8lVG00" alt="uml diagram" loading="lazy"><figcaption> Um objeto como um conjuto de outros objetos.</figcaption></figure><ul><li>Um Objeto \xE9 uma entidade independente que armazena dados, encapsula servi\xE7os, troca mensagens com outros objetos e \xE9 modelado para executar as fun\xE7\xF5es do sistema</li><li>Um Objeto pode ser descrito pela identifica\xE7\xE3o de dois elementos b\xE1sicos: estrutura e comportamento</li></ul><div class="custom-container tip"><p class="custom-container-title">Exemplo</p><p>Objeto do tipo <strong>Pessoa</strong></p><ul><li><strong>Estrutura</strong> : nome, cpf, idade</li><li><strong>Comportamento</strong> : trabalhar, descansar</li></ul></div><div class="custom-container tip"><p class="custom-container-title">Exemplo</p><p>Objeto do tipo <strong>Conta</strong></p><ul><li><strong>Estrutura:</strong> titular, c\xF3digo, saldo</li><li><strong>Comportamento:</strong> debitarValor, adicionarValor</li></ul></div><h2 id="mensagens" tabindex="-1"><a class="header-anchor" href="#mensagens" aria-hidden="true">#</a> Mensagens</h2><ul><li>S\xE3o est\xEDmulos enviados aos objetos solicitando que alguma opera\xE7\xE3o seja realizada por um dado objeto <ul><li>Nome da mensagem</li><li>Par\xE2metros</li></ul></li><li>Especifica O QUE deve ser feito</li><li>O comportamento de um objeto \xE9 dado pelo conjunto de mensagens que ele pode responder</li></ul><h2 id="caracteristicas-dos-objetos" tabindex="-1"><a class="header-anchor" href="#caracteristicas-dos-objetos" aria-hidden="true">#</a> Caracter\xEDsticas dos Objetos</h2><ul><li>\xDAnico</li><li>Possui atributos que definem carater\xEDsticas e/ou estado</li><li>Possuem capacidade de realizar a\xE7\xF5es que chamamos de m\xE9todos ou fun\xE7\xF5es</li><li>Normalmente se diz que um objeto \xE9 uma inst\xE2ncia de uma Classe.</li><li>O que \xE9 uma Classe ?</li></ul><h1 id="classe" tabindex="-1"><a class="header-anchor" href="#classe" aria-hidden="true">#</a> Classe</h1><p><sup class="footnote-ref"><a href="#footnote1">[1:1]</a><a class="footnote-anchor" id="footnote-ref1:1"></a></sup></p><h2 id="origem-do-termo" tabindex="-1"><a class="header-anchor" href="#origem-do-termo" aria-hidden="true">#</a> Origem do termo</h2><ul><li>A palavra classe vem da taxonomia da biologia. <ul><li>Todos os seres vivos de uma mesma classe biol\xF3gica t\xEAm uma s\xE9rie de atributos e comportamentos em comum, mas n\xE3o s\xE3o iguais, podem variar nos valores desses atributos e como realizam esses comportamentos.</li></ul></li><li>Homo Sapiens define um grupo de seres que possuem caracter\xEDsticas em comum <ul><li>Homo Sapiens \xE9 um ser humano?</li><li>Tudo est\xE1 especificado na classe Homo Sapiens, mas se quisermos mandar algu\xE9m correr, comer, pular, precisaremos de uma inst\xE2ncia de Homo Sapiens, ou ent\xE3o de um objeto do tipo Homo Sapiens.</li></ul></li></ul><h2 id="analogias" tabindex="-1"><a class="header-anchor" href="#analogias" aria-hidden="true">#</a> Analogias</h2><ul><li>Uma receita de bolo. <ul><li>Voc\xEA come uma receita de bolo? <ul><li>Precisamos instaci\xE1-la, criar um objeto bolo a partir dessa especifica\xE7\xE3o (a classe) para utiliz\xE1-la.</li><li>Podemos criar centenas de bolos a partir dessa classe (a receita, no caso), eles podem ser bem semelhantes, alguns at\xE9 id\xEAnticos, mas s\xE3o objetos diferentes.</li></ul></li></ul></li><li>A planta de uma casa \xE9 uma casa?...</li></ul><h2 id="conceito" tabindex="-1"><a class="header-anchor" href="#conceito" aria-hidden="true">#</a> Conceito</h2><ul><li>Uma classe \xE9 uma descri\xE7\xE3o de um conjunto que compartilham os mesmos atributos(caracter\xEDsticas), opera\xE7\xF5es, relacionamentos e sem\xE2ntica</li><li>Todos os objetos s\xE3o inst\xE2ncias de classes, onde a classe descreve as propriedades e comportamentos daquele objeto</li><li><strong>Atributos</strong> s\xE3o propriedades de uma classe, que descreve um intervalo de valores que as inst\xE2ncias podem apresentar. Uma Classe pode ter qualquer n\xFAmero de atributos ou nenhum</li><li><strong>Opera\xE7\xF5es</strong> correspondem aos processos que a classe pode realizar</li></ul><figure><img src="https://www.plantuml.com/plantuml/svg/RT1B2i8m40RWVKunT5_eOwLWAOgUmar8fpgGXwHJN1HFuyA3z6AMj8YnhfB_J_AHfEvOUkwD5lLdfh5bO0UUBbU6XZmg9cU5aJT8ZjqD5RMavFWQdmxEja7eZGJbBCi4P3VF1l481qB81m5WUuFUmQxAfw0qeMMS4fnwBQsRkaxg9gndsPGq6GeRic-fYAGYalQesSVK9fBoY2eZgeoe0wcLjBgK20oaQRMy4hPWyVvR5__hSgbhj4tu_tby0m00" alt="uml diagram" loading="lazy"><figcaption> Representa\xE7\xE3o de v\xE1rios objetos de uma mesma estrutura.</figcaption></figure><ul><li>Estrutura (molde) que define os atributos e/ou estados de um conjunto de objetos com caracter\xEDsticas similares.</li><li>Define o comportamento de seus objetos (a\xE7\xF5es que o objeto pode fazer) atrav\xE9s de m\xE9todos.</li><li>Descreve os servi\xE7os (a\xE7\xF5es) providos por seus objetos</li><li>Quais informa\xE7\xF5es eles podem armazenar</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Conta</span><span class="token punctuation">{</span>
  <span class="token keyword">int</span> numero<span class="token punctuation">;</span>
  <span class="token class-name">String</span> cliente<span class="token punctuation">;</span>
  <span class="token keyword">double</span> saldo<span class="token punctuation">;</span>
  <span class="token keyword">double</span> limite<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="usando-a-classe" tabindex="-1"><a class="header-anchor" href="#usando-a-classe" aria-hidden="true">#</a> Usando a classe</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Programa</span><span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">Conta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Objeto criado, mas como acessar?</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Programa</span><span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Conta</span> minhaConta<span class="token punctuation">;</span>
    minhaConta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Atrav\xE9s da vari\xE1vel minhaConta, podemos acessar o objeto rec\xE9m criado para alterar seu cliente, seu saldo, etc</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Programa</span><span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Conta</span> minhaConta<span class="token punctuation">;</span>
    minhaConta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    minhaConta<span class="token punctuation">.</span>cliente <span class="token operator">=</span> <span class="token string">&quot;Leandro&quot;</span><span class="token punctuation">;</span>
    minhaConta<span class="token punctuation">.</span>saldo <span class="token operator">=</span> <span class="token number">10.0</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Saldo atual: &quot;</span><span class="token operator">+</span>minhaConta<span class="token punctuation">.</span>saldo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="atributos-de-uma-classe" tabindex="-1"><a class="header-anchor" href="#atributos-de-uma-classe" aria-hidden="true">#</a> Atributos de uma Classe</h2><ul><li>Carater\xEDsticas e/ou estado de uma classe</li><li>Ap\xF3s a classe ser instanciada em um objeto os atributos v\xE3o receber valores (carater\xEDsticas e/ou estados) que definem o objeto</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Conta</span><span class="token punctuation">{</span>
  <span class="token keyword">int</span> numero<span class="token punctuation">;</span><span class="token comment">//atributo</span>
  <span class="token class-name">String</span> cliente<span class="token punctuation">;</span><span class="token comment">//atributo</span>
  <span class="token keyword">double</span> saldo<span class="token punctuation">;</span><span class="token comment">//atributo</span>
  <span class="token keyword">double</span> limite<span class="token punctuation">;</span><span class="token comment">//atributo</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="metodos-de-uma-classe" tabindex="-1"><a class="header-anchor" href="#metodos-de-uma-classe" aria-hidden="true">#</a> M\xE9todos de uma Classe</h2><ul><li><p>Conjunto de a\xE7\xF5es que um determinado objeto pode executar</p></li><li><p>Definem o que um objeto pode fazer</p></li><li><p>S\xE3o acionados por outros objetos</p><ul><li>Os objetos se comunicam atrav\xE9s de m\xE9todos</li><li>Troca de mensagens</li></ul></li><li><p>Um m\xE9todo que saca uma determinada quantidade e n\xE3o devolve nenhuma informa\xE7\xE3o para quem acionar esse m\xE9todo</p></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Conta</span><span class="token punctuation">{</span>
  <span class="token keyword">int</span> numero<span class="token punctuation">;</span>
  <span class="token class-name">String</span> cliente<span class="token punctuation">;</span>
  <span class="token keyword">double</span> saldo<span class="token punctuation">;</span>
  <span class="token keyword">double</span> limite<span class="token punctuation">;</span>

  <span class="token keyword">void</span> <span class="token function">saca</span><span class="token punctuation">(</span><span class="token keyword">double</span> quantidade<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//m\xE9todo</span>
    <span class="token keyword">double</span> novoSaldo <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>saldo <span class="token operator">-</span> quantidade<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>saldo <span class="token operator">=</span> novoSaldo<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Fazer um dep\xF3sito</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Conta</span><span class="token punctuation">{</span>
  <span class="token keyword">int</span> numero<span class="token punctuation">;</span>
  <span class="token class-name">String</span> cliente<span class="token punctuation">;</span>
  <span class="token keyword">double</span> saldo<span class="token punctuation">;</span>
  <span class="token keyword">double</span> limite<span class="token punctuation">;</span>

  <span class="token keyword">void</span> <span class="token function">saca</span><span class="token punctuation">(</span><span class="token keyword">double</span> quantidade<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//m\xE9todo</span>
    <span class="token keyword">double</span> novoSaldo <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>saldo <span class="token operator">-</span> quantidade<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>saldo <span class="token operator">=</span> novoSaldo<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">void</span> <span class="token function">deposita</span><span class="token punctuation">(</span><span class="token keyword">double</span> quantidade<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//m\xE9todo</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>saldo <span class="token operator">+=</span> quantidade<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Programa</span><span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Conta</span> minhaConta<span class="token punctuation">;</span>
    minhaConta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    minhaConta<span class="token punctuation">.</span>cliente <span class="token operator">=</span> <span class="token string">&quot;Leandro&quot;</span><span class="token punctuation">;</span>
    minhaConta<span class="token punctuation">.</span>saldo <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">;</span>

    <span class="token comment">//saca 20</span>
    minhaConta<span class="token punctuation">.</span><span class="token function">saca</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//deposita 50</span>
    minhaConta<span class="token punctuation">.</span><span class="token function">deposita</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Saldo atual: &quot;</span><span class="token operator">+</span>minhaConta<span class="token punctuation">.</span>saldo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>M\xE9todo com retorno <ul><li>No caso do nosso m\xE9todo saca, podemos devolver um valor booleano indicando se a opera\xE7\xE3o foi bem sucedida.</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Conta</span><span class="token punctuation">{</span>
  <span class="token comment">//...</span>

  <span class="token keyword">boolean</span> <span class="token function">saca</span><span class="token punctuation">(</span><span class="token keyword">double</span> valor<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>saldo<span class="token operator">&lt;</span>valor<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>saldo <span class="token operator">-=</span> valor<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Programa</span><span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//... </span>
    minhaConta<span class="token punctuation">.</span>saldo <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">;</span>

    <span class="token keyword">boolean</span> consegui<span class="token operator">=</span>minhaConta<span class="token punctuation">.</span><span class="token function">saca</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>consegui<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Consegui sacar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;N\xE3o consegui sacar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="referencia-ao-objeto" tabindex="-1"><a class="header-anchor" href="#referencia-ao-objeto" aria-hidden="true">#</a> Refer\xEAncia ao Objeto</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Programa</span><span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Conta</span> c1<span class="token punctuation">;</span>
    c1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Conta</span> c2<span class="token punctuation">;</span>
    c2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>c1 uma vari\xE1vel que &quot;aponta&quot; para o objeto(refer\xEAncia).</li></ul><figure><img src="https://www.plantuml.com/plantuml/svg/SoWkIImgAStDuNA0iufIaqiIyz9pKXMKV5Dpyuio4vMgkHI004d2EJ-l95598R5O8Tae5u-a8OPaiX5K6uQ48LGBM09eh8skBbGLq1WGnv2hbiiXDIy5w4W51HWB0000" alt="uml diagram" loading="lazy"><figcaption> Representa\xE7\xE3o da mem\xF3ria com duas instancias de Conta.</figcaption></figure><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Programa</span><span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Conta</span> c1<span class="token punctuation">;</span>
    c1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Conta</span> c2 <span class="token operator">=</span> c1<span class="token punctuation">;</span>    
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://www.plantuml.com/plantuml/svg/SoWkIImgAStDuNA0iufIaqiIyz9pKXMKV5Dpyuio4vMgkHI004d2EJ-l95598R5O8Tam5rqosH0gWo5X194m0ai0TThewa9LGJb6NBLS3gbvAM0NGMW0" alt="uml diagram" loading="lazy"><figcaption> Representa\xE7\xE3o da mem\xF3ria com apenas uma instancia de Conta.</figcaption></figure><div class="custom-container warning"><p class="custom-container-title">?</p><p>Como seria a transfer\xEAncia de valores entre duas contas?</p></div><figure><img src="https://www.plantuml.com/plantuml/svg/RP0z3i8m38NtdCBg1198D6C7L8aBS0KhDIYYJOhjWBWzeQKL51R_lE_v3Qv5aJLrhQddIIu-zCZOWUYZfLpPku5WqeXE_GsL80PZiaszypq6XIF7Spx2Bx5mPNM8GR40573b0jfFQ8rnJA_ex9lIOBlFArI1xZErtzIEzET46OESY3sldDtOtMvjilo687XDj1fK9aqSG98ZaJYPSYmqr4VnYdzzYxMcq0oF7FiJ" alt="uml diagram" loading="lazy"><figcaption>Diagram de sequencia para a transfer\xEAncia entre contas</figcaption></figure><h3 id="comparando" tabindex="-1"><a class="header-anchor" href="#comparando" aria-hidden="true">#</a> Comparando</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Conta</span> c1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  c1<span class="token punctuation">.</span>cliente <span class="token operator">=</span> <span class="token string">&quot;Leandro&quot;</span><span class="token punctuation">;</span>    
  c1<span class="token punctuation">.</span>saldo <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">;</span>    
  <span class="token class-name">Conta</span> c2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
  c2<span class="token punctuation">.</span>cliente <span class="token operator">=</span> <span class="token string">&quot;Leandro&quot;</span><span class="token punctuation">;</span>    
  c2<span class="token punctuation">.</span>saldo <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">;</span>    
  <span class="token keyword">if</span> <span class="token punctuation">(</span>c1 <span class="token operator">==</span> c2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Contas iguais&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>O operador <code>==</code> compara o conte\xFAdo das vari\xE1veis <ul><li>vari\xE1veis n\xE3o guardam o objeto, e sim o endere\xE7o em que ele se encontra (refer\xEAncia)</li><li>As contas podem ser equivalentes no nosso crit\xE9rio de igualdade, por\xE9m elas n\xE3o s\xE3o o mesmo objeto.</li></ul></li></ul><h4 id="equals" tabindex="-1"><a class="header-anchor" href="#equals" aria-hidden="true">#</a> equals</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Conta</span> c1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  c1<span class="token punctuation">.</span>cliente <span class="token operator">=</span> <span class="token string">&quot;Leandro&quot;</span><span class="token punctuation">;</span>    
  c1<span class="token punctuation">.</span>saldo <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">;</span>    
  <span class="token class-name">Conta</span> c2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Conta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
  c2<span class="token punctuation">.</span>cliente <span class="token operator">=</span> <span class="token string">&quot;Leandro&quot;</span><span class="token punctuation">;</span>    
  c2<span class="token punctuation">.</span>saldo <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">;</span>    
  <span class="token keyword">if</span> <span class="token punctuation">(</span>c1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Contas iguais&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Conta</span> <span class="token punctuation">{</span>
  <span class="token comment">//...</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Conta</span> outraConta<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cliente<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>outraConta<span class="token punctuation">.</span>cliente<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numero <span class="token operator">==</span> outraConta<span class="token punctuation">.</span>numero<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//...</span>
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="transformando-o-objeto-em-string" tabindex="-1"><a class="header-anchor" href="#transformando-o-objeto-em-string" aria-hidden="true">#</a> Transformando o objeto em String</h2><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> toString</h3><p>O m\xE9todo <code>toString()</code> em Java \xE9 um m\xE9todo <s>da classe Object</s> que retorna uma representa\xE7\xE3o em formato de string do objeto em quest\xE3o.</p><p>Se uma classe em Java deseja ter sua pr\xF3pria representa\xE7\xE3o em formato de string, ela pode sobrescrever esse m\xE9todo e fornecer uma implementa\xE7\xE3o personalizada. A implementa\xE7\xE3o sobrescrita deve retornar uma string que descreva o objeto de uma forma \xFAtil e significativa para o usu\xE1rio.</p><p>Por exemplo, a seguinte classe <code>Pessoa</code> sobrescreve o m\xE9todo toString() para fornecer uma representa\xE7\xE3o personalizada de uma pessoa:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Pessoa</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> nome<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> idade<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Pessoa</span><span class="token punctuation">(</span><span class="token class-name">String</span> nome<span class="token punctuation">,</span> <span class="token keyword">int</span> idade<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nome <span class="token operator">=</span> nome<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>idade <span class="token operator">=</span> idade<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Pessoa{&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;nome=&#39;&quot;</span> <span class="token operator">+</span> nome <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;, idade=&quot;</span> <span class="token operator">+</span> idade <span class="token operator">+</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Neste exemplo, o m\xE9todo <code>toString()</code> retorna uma string formatada que inclui o nome e a idade da pessoa em quest\xE3o, com o seguinte formato: <code>Pessoa{nome=&#39;Alice&#39;, idade=30}</code>.</p><p>Para usar o m\xE9todo <code>toString()</code> em uma inst\xE2ncia da classe <code>Pessoa</code>, basta cham\xE1-lo em uma refer\xEAncia para um objeto <code>Pessoa</code>, como no exemplo abaixo:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Pessoa</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pessoa</span><span class="token punctuation">(</span><span class="token string">&quot;Alice&quot;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> personString <span class="token operator">=</span> person<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// retorna &quot;Pessoa{nome=&#39;Alice&#39;, idade=30}&quot;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Escreve Pessoa{nome=&#39;Alice&#39;, idade=30} no console</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="exercicios" tabindex="-1"><a class="header-anchor" href="#exercicios" aria-hidden="true">#</a> Exerc\xEDcios</h2>`,64),d=t('<h2 id="referencias" tabindex="-1"><a class="header-anchor" href="#referencias" aria-hidden="true">#</a> Refer\xEAncias</h2><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>Caelum. Java e Orienta\xE7\xE3o a Objetos - Curso fj-11. <a href="#footnote-ref1" class="footnote-backref">\u21A9\uFE0E</a> <a href="#footnote-ref1:1" class="footnote-backref">\u21A9\uFE0E</a></p></li></ol></section>',3);function k(m,v){const s=l("RouterLink");return i(),c("div",null,[r,n("ul",null,[n("li",null,[a(s,{to:"/posts/exercicios/02_exercicio_modelagem_carro.html"},{default:e(()=>[o("Exerc\xEDcio Modelagem Carro")]),_:1})]),n("li",null,[a(s,{to:"/posts/exercicios/03_exercicio_modelagem_tv.html"},{default:e(()=>[o("Exerc\xEDcio Modelagem TV")]),_:1})]),n("li",null,[a(s,{to:"/posts/exercicios/04_exercicio_modelagem_dvd.html"},{default:e(()=>[o("Exerc\xEDcio Modelagem DVD")]),_:1})])]),d])}const h=p(u,[["render",k],["__file","03_objeto_classe.html.vue"]]);export{h as default};
