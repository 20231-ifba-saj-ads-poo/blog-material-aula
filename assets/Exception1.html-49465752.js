import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as i,c as s,a as e,b as o,d as r,w as d,e as l}from"./app-efee5e4c.js";const m={},p=e("h1",{id:"exercicios-sobre-exception",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#exercicios-sobre-exception","aria-hidden":"true"},"#"),o(" Exercícios sobre Exception")],-1),u=l('<ol><li>Na classe <code>Conta</code>, modifique o método deposita(double x). Ele deve lançar uma exception chamada <code>IllegalArgumentException</code>, que já faz parte da biblioteca do Java, sempre que o valor passado como argumento for inválido (por exemplo, quando for negativo). <ol><li>Adicione o try/catch para tratar o erro</li><li>Ao lançar a IllegalArgumentException, passe via construtor uma mensagem a ser exibida. Lembre que a String recebida como parâmetro é acessível depois via o método getMessage() herdado por todas as Exceptions</li></ol></li><li>Modificar o sistema de controle de contas correntes para lançar uma exceção de <code>SaldoInsufucienteException</code> caso o valor de saque seja maior que o saldo disponível</li></ol><h2 id="entrega" tabindex="-1"><a class="header-anchor" href="#entrega" aria-hidden="true">#</a> Entrega</h2>',2),x={href:"https://classroom.github.com/a/P5sYMS48",target:"_blank",rel:"noopener noreferrer"};function h(_,f){const t=a("RouterLink"),c=a("ExternalLinkIcon");return i(),s("div",null,[p,e("p",null,[o("Considerando o exercicio "),r(t,{to:"/posts/exercicios/ExercicioHeranca/Heranca4%20Banco.html"},{default:d(()=>[o("Modelagem Sistema Banco")]),_:1})]),u,e("p",null,[e("a",x,[o("Link"),r(c)])])])}const E=n(m,[["render",h],["__file","Exception1.html.vue"]]);export{E as default};
